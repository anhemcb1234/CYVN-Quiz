[{"D:\\test\\src\\index.js":"1","D:\\test\\src\\App.js":"2","D:\\test\\src\\reportWebVitals.js":"3","D:\\test\\src\\pages\\Quiz.js":"4","D:\\test\\src\\pages\\LogIn.js":"5","D:\\test\\src\\pages\\SignUp.js":"6","D:\\test\\src\\pages\\Result.js":"7","D:\\test\\src\\pages\\ChooseQuiz.js":"8","D:\\test\\src\\services\\loginServices.js":"9","D:\\test\\src\\services\\examsServices.js":"10","D:\\test\\src\\services\\signServices.js":"11","D:\\test\\src\\services\\Axios.js":"12","D:\\test\\src\\pages\\DashBoard.js":"13","D:\\test\\src\\pages\\NotFound.js":"14","D:\\test\\src\\pages\\Ranking.js":"15"},{"size":552,"mtime":1652369933096,"results":"16","hashOfConfig":"17"},{"size":1190,"mtime":1653226429664,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1652318401458,"results":"19","hashOfConfig":"17"},{"size":10555,"mtime":1653233439357,"results":"20","hashOfConfig":"17"},{"size":7931,"mtime":1653233001082,"results":"21","hashOfConfig":"17"},{"size":6803,"mtime":1653033886084,"results":"22","hashOfConfig":"17"},{"size":2953,"mtime":1653109043768,"results":"23","hashOfConfig":"17"},{"size":5485,"mtime":1653226429664,"results":"24","hashOfConfig":"17"},{"size":158,"mtime":1653194050480,"results":"25","hashOfConfig":"17"},{"size":812,"mtime":1653194047088,"results":"26","hashOfConfig":"17"},{"size":159,"mtime":1653194054944,"results":"27","hashOfConfig":"17"},{"size":1603,"mtime":1652369933107,"results":"28","hashOfConfig":"17"},{"size":5097,"mtime":1653233150644,"results":"29","hashOfConfig":"17"},{"size":1129,"mtime":1653107762975,"results":"30","hashOfConfig":"17"},{"size":7663,"mtime":1653234591332,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"c0d0b",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"D:\\test\\src\\index.js",[],[],[],"D:\\test\\src\\App.js",["86"],[],"import React from \"react\";\r\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\r\nimport Login from \"./pages/LogIn\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Quiz from \"./pages/Quiz\";\r\nimport ChooseQuiz from \"./pages/ChooseQuiz\";\r\nimport Result from \"./pages/Result\"\r\nimport DashBoard from \"./pages/DashBoard\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Ranking from \"./pages/Ranking\";\r\n/* import QuizDetail from \"./components/QuizDetail\"; */\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Login />} />\r\n          <Route path=\"/signup\" element={<SignUp />} />\r\n          <Route path=\"/choose-quiz\" element={<ChooseQuiz />} />\r\n          <Route path=\"/quiz\" element={<Quiz />}></Route>\r\n          <Route path=\"/result\" element={<Result />}></Route>\r\n          <Route path=\"/dashboard\" element={<DashBoard />}></Route>\r\n          <Route path=\"/ranking\" element={<Ranking />}></Route>\r\n          <Route path=\"*\" element={<NotFound />}></Route>\r\n        </Routes>\r\n        {/* <Link to={`/about?name=mien&age=20`}>about</Link> */}\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n","D:\\test\\src\\reportWebVitals.js",[],[],"D:\\test\\src\\pages\\Quiz.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport { examsServices } from \"../services/examsServices\";\r\n\r\nconst Quiz = () => {\r\n  let navigate = useNavigate();\r\n  const [searchParam] = useSearchParams();\r\n  const [id, setId] = useState(() => {\r\n    return searchParam?.get(\"id\");\r\n  });\r\n  const [idUser, setIdUser] = useState(() => {\r\n    return localStorage.getItem(\"idUser\");\r\n  });\r\n  const [show, setShow] = useState(true);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [filterSelected, setFilterSelected] = useState(() => {\r\n    return [];\r\n  });\r\n  const [questionId, setQuestionId] = useState(0);\r\n  const [minutes, setMinutes] = useState(10);\r\n  const [second, setSecond] = useState(10);\r\n  const [listAnswer, setListAnswer] = useState([]);\r\n  const [listsAnswer, setListAnswers] = useState([]);\r\n  const [addQuestion, setAddQuestion] = useState([]);\r\n  const [check, setCheck] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [idQuestion, setIdquestion] = useState(() => {\r\n    return questions[questionId]?.id;\r\n  });\r\n  const [userName, setUserName] = useState(() => {\r\n    return localStorage.getItem(\"userName\");\r\n  });\r\n  const [dataFilter, setDataFilter] = useState([]);\r\n  const red = \"text-rose-600\";\r\n  const mt = \"flex a justify-between\"\r\n  if (!localStorage.getItem(\"token\")) {\r\n    alert(\"You must be logged in to access this page\");\r\n    navigate(\"/\");\r\n  }\r\n  const handlerStart = () => {\r\n    setShow(!show);\r\n    setMinutes(1);\r\n    setSecond(59);\r\n  };\r\n  useEffect(() => {\r\n    if (second === 0) {\r\n      setSecond(59);\r\n      setMinutes(minutes - 1);\r\n    }\r\n    let time = setInterval(() => {\r\n      setSecond(second - 1);\r\n    }, 1000);\r\n    window.addEventListener('beforeunload', function (e) {\r\n      e.preventDefault();\r\n      e.returnValue = '';\r\n   });\r\n    return () => clearInterval(time);\r\n  }, [second]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let repsQuestion = await examsServices.getQuestions(id);\r\n        setQuestions(repsQuestion.data);\r\n        setId(searchParam?.get(\"id\"));\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, [show]);\r\n\r\n  const handlerPrevious = () => {\r\n    setCheck();\r\n    if (questionId <= 0) {\r\n      setQuestionId(questions.length - 1);\r\n      return;\r\n    }\r\n    setQuestionId(questionId - 1);\r\n  };\r\n  useEffect(() => {\r\n    setListAnswers([...listsAnswer, listAnswer]);\r\n    const arr1 = getUniqueListBy(listsAnswer, \"question_id\");\r\n    setAddQuestion(arr1);\r\n  }, [addQuestion]);\r\n  const handlerNext = () => {\r\n    if (questionId === questions.length - 1) {\r\n      setQuestionId(0);\r\n      return;\r\n    }\r\n    setFilterSelected([]);\r\n    setQuestionId(questionId + 1);\r\n    selectedFilterHandle();\r\n  };\r\n  useEffect(() => {\r\n    setData([\r\n      ...data,\r\n      {\r\n        question_id: questions[questionId]?.id,\r\n        question_type: 2,\r\n        idSingleQuestion: null,\r\n        listIdAnswer: filterSelected,\r\n      },\r\n    ]);\r\n  }, [filterSelected]);\r\n  useEffect(() => {\r\n    let newArray = [...data].filter((x) => x.listIdAnswer?.length);\r\n    let newArray2 = getUniqueListBy(newArray, \"question_id\");\r\n    setDataFilter(newArray2);\r\n  }, [dataFilter]);\r\n  useEffect(() => {\r\n    if(second === 0 && minutes === 0) {\r\n      handlerSubmit()\r\n      return\r\n    }\r\n  },[second])\r\n  const selectedFilterHandle = (id, index, item, e) => {\r\n    setIdquestion(item?.question_id);\r\n    item.checked = !item.checked;\r\n    if (filterSelected?.includes(index)) {\r\n      const tmp = filterSelected?.filter((item) => item !== index);\r\n      setFilterSelected(tmp);\r\n      return;\r\n    }\r\n    setFilterSelected([...filterSelected, index]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let test = [...questions];\r\n    test.map((x) => x.answerDTOS?.map((y) => (y.checked = false)));\r\n    setQuestions(test);\r\n  }, []);\r\n  function getUniqueListBy(arr, key) {\r\n    return [...new Map(arr.map((item) => [item[key], item])).values()];\r\n  }\r\n  const radioFilterHandler = (id) => {\r\n    let testA = [...questions];\r\n    let testing = [...questions];\r\n    testA[questionId]?.answerDTOS?.map((x) => (x.anwer = false));\r\n    testA[questionId]?.answerDTOS?.map((x) => (x.question_type = 1));\r\n    testA[questionId]?.answerDTOS?.map((x) => (x.idSingleQuestion = id));\r\n    let a = testA[questionId]?.answerDTOS?.find((x) => x.id === id);\r\n    a.id = id;\r\n    a.anwer = !a.anwer;\r\n    let filerList = testing[questionId]?.answerDTOS?.find(\r\n      (x) => x.anwer === true\r\n    );\r\n    setListAnswer(filerList);\r\n  };\r\n  const handlerSubmit = async () => {\r\n    await examsServices.addQuestions({\r\n      userId: idUser,\r\n      examId: id,\r\n      lstQuestion: [...addQuestion.filter((x) => x.id), ...dataFilter],\r\n    });\r\n    navigate(`/result?id=${id}&idUser=${idUser}`);\r\n  };\r\n  return (\r\n    <>\r\n      {show ? (\r\n        <div className=\"flex w-full h-screen justify-center items-center\">\r\n          <div className=\"absolute top-5  right-5\">\r\n            <Link to={`/choose-quiz?userName=${userName}`}>\r\n              <button className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\r\n                Go to home page\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"w-full max-w-xl p-3\">\r\n            <h1 className=\"font-bold text-5xl text-center text-indigo-700\">\r\n              Hackathon Quiz\r\n            </h1>\r\n            <div className=\"mt-6 flex justify-center items-center\">\r\n              <button\r\n                onClick={() => handlerStart()}\r\n                className=\"float-right hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300 bg-indigo-600 text-white text-sm font-bold tracking-wide rounded-full px-5 py-2\"\r\n              >\r\n                Start\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          id=\"app\"\r\n          className=\"flex  w-full h-screen justify-center items-center\"\r\n        >\r\n          <div className=\"w-full max-w-xl p-3\">\r\n            <div className=\"flex justify-between\">\r\n              <p>\r\n                Câu hỏi: {questionId + 1}/{questions.length}\r\n              </p>\r\n              <span\r\n                className={\r\n                  minutes === 0\r\n                    ? red + \" countdown font-mono text-2xl\"\r\n                    : \"countdown font-mono text-2xl\"\r\n                }\r\n              >\r\n                {minutes === 0 ? (\r\n                  \"\"\r\n                ) : (\r\n                  <>\r\n                    <span style={{ \"--value\": minutes }}></span>m\r\n                  </>\r\n                )}\r\n                <span style={{ \"--value\": second }}></span>s\r\n              </span>\r\n            </div>\r\n            <div\r\n              className=\"flex justify-start flex-col\"\r\n              style={{ height: \"17vh\" }}\r\n            >\r\n              <>\r\n                <p className=\"font-bold w-full text-2xl text-indigo-700\">\r\n                  {questions[questionId]?.question_content}\r\n                </p>\r\n                {questions[questionId]?.image_url ? <img className=\"w-full rounded mb-2 h-20 object-cover\" src={\"http://18.136.124.246:9998/images/\"+questions[questionId]?.image_url}/> : null}\r\n                {questions[questionId]?.answerDTOS?.map((item, index) => (\r\n                  <div className=\"mx-2 flex items-center\" key={index}>                    \r\n                    <input\r\n                      className=\"form-check-input mr-2  appearance-none rounded-full h-4 w-4 border border-gray-300 bg-white checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 align-top bg-no-repeat bg-center bg-contain float-left cursor-pointer\"\r\n                      type={\r\n                        questions[questionId]?.question_type == 1\r\n                          ? \"radio\"\r\n                          : \"checkbox\"\r\n                      }\r\n                      name=\"flexRadioDefault\"\r\n                      id={item?.id}\r\n                      value={item?.id}\r\n                      checked={\r\n                        questions[questionId].question_type == 1\r\n                          ? item?.anwer\r\n                          : item?.checked.checked\r\n                      }\r\n                      onChange={\r\n                        questions[questionId]?.question_type == 1\r\n                          ? () => radioFilterHandler(item?.id)\r\n                          : (e) =>\r\n                              selectedFilterHandle(\r\n                                item?.answer_content,\r\n                                item?.id,\r\n                                item,\r\n                                e\r\n                              )\r\n                      }\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label text-xl inline-block text-gray-800\"\r\n                      for={item?.id}\r\n                    >\r\n                      {index + 1}. {item?.answer_content}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            </div>\r\n            <div className={questions[questionId]?.image_url ? mt + ' mt-32' :  mt + ' mt-12'}>\r\n              <button\r\n                onClick={() => handlerPrevious()}\r\n                className=\"float-right hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300 bg-indigo-600 text-white text-sm font-bold tracking-wide rounded-full px-5 py-2\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={() => handlerNext()}\r\n                className=\"float-right hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300 bg-indigo-600 text-white text-sm font-bold tracking-wide rounded-full px-5 py-2\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n            <div className=\"w-full mt-4\">\r\n              <button\r\n                onClick={() => handlerSubmit()}\r\n                className=\"float-right w-full hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300 bg-indigo-600 text-white text-sm font-bold tracking-wide rounded-full px-5 py-2\"\r\n              >\r\n                Finish\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Quiz;\r\n","D:\\test\\src\\pages\\LogIn.js",["102","103"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { loginServices } from \"../services/loginServices\";\r\n\r\nconst Login = () => {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n\r\n\r\n  const handlerLogin = async () => {\r\n    try {\r\n      setShow(true);\r\n      const reps = await loginServices.Login({\r\n        username,\r\n        password,\r\n      });\r\n      localStorage.setItem(\"token\", reps.data.token);\r\n      localStorage.setItem(\"userName\", reps.data.username);\r\n      localStorage.setItem(\"idUser\", reps.data.id);\r\n\r\n      navigate(`/choose-quiz?userName=${reps.data.username}&id=${reps.data.id}`);\r\n    } catch (e) {\r\n      navigate(\"/\");\r\n      setTimeout(() => {\r\n        setShow(false);\r\n      }, 2000);\r\n      setShowToast(true);\r\n      setTimeout(() => {\r\n        setShowToast(false);\r\n      }, 6000);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {show ? (\r\n        <div class=\"h-screen w-full flex items-center justify-center\">\r\n          <svg\r\n            role=\"status\"\r\n            class=\"inline w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600\"\r\n            viewBox=\"0 0 100 101\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n            <path\r\n              d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n              fill=\"currentFill\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {showToast ? (\r\n            <div className=\"flex  absolute left-0 right-0 top-10  ease-in duration-300 flex-col justify-center\">\r\n              <div\r\n                className=\"bg-red-600 shadow-lg mx-auto w-96 max-w-full text-sm pointer-events-auto bg-clip-padding rounded-lg block mb-3\"\r\n                id=\"static-example\"\r\n                aria-live=\"assertive\"\r\n                aria-atomic=\"true\"\r\n                data-mdb-autohide=\"false\"\r\n              >\r\n                <div className=\"bg-red-600 flex justify-between items-center py-2 px-3 bg-clip-padding border-b border-red-500 rounded-t-lg\">\r\n                  <p className=\"font-bold text-white flex items-center\">\r\n                    <svg\r\n                      aria-hidden=\"true\"\r\n                      focusable=\"false\"\r\n                      data-prefix=\"fas\"\r\n                      data-icon=\"info-circle\"\r\n                      className=\"w-4 h-4 mr-2 fill-current\"\r\n                      role=\"img\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 512 512\"\r\n                    >\r\n                      <path\r\n                        fill=\"currentColor\"\r\n                        d=\"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"\r\n                      ></path>\r\n                    </svg>\r\n                    ERROR\r\n                  </p>\r\n                </div>\r\n                <div class=\"p-3 bg-red-600 rounded-b-lg break-words text-white\">\r\n                  <p class=\"font-bold\">\r\n                    Please check your password and account\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          <section className=\"h-screen \">\r\n            <div className=\"px-6 h-full text-gray-800\">\r\n              <div className=\"flex xl:justify-center lg:justify-between justify-center items-center flex-wrap h-full g-6\">\r\n                <div className=\"grow-0 shrink-1 md:shrink-0 basis-auto xl:w-6/12 lg:w-6/12 md:w-9/12 mb-12 md:mb-0\">\r\n                  <img\r\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp\"\r\n                    className=\"w-full\"\r\n                    alt=\"Sample image\"\r\n                  />\r\n                </div>\r\n                <div className=\"xl:ml-20 xl:w-5/12 lg:w-5/12 md:w-8/12 mb-12 md:mb-0\">\r\n                  <form>\r\n                    <div className=\"mb-6\">\r\n                      <h1 className=\"text-4xl font-bold text-center \">Login</h1>\r\n                    </div>\r\n\r\n                    <div className=\"mb-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                        id=\"exampleFormControlInput\"\r\n                        placeholder=\"Email address\"\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mb-6\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                        id=\"exampleFormControlInput2\"\r\n                        placeholder=\"Password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"text-center lg:text-left\">\r\n                      <button\r\n                        onClick={() => handlerLogin()}\r\n                        type=\"button\"\r\n                        className=\"inline-block w-full px-7 py-3 bg-blue-600 text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\"\r\n                      >\r\n                        Login\r\n                      </button>\r\n                      <p className=\"text-sm font-semibold text-center mt-4 pt-1 mb-0\">\r\n                        Don't have an account?\r\n                        <Link to=\"/signup\">\r\n                          <button className=\"underline ml-1\">Register</button>\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\test\\src\\pages\\SignUp.js",["104","105","106","107","108"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { signServices } from \"../services/signServices\";\r\n\r\nconst SignUp = () => {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  let navigate = useNavigate();\r\n\r\n  const handlerSingUp = async () => {\r\n    if (\r\n      !(\r\n        password.length > 5 &&\r\n        username.length > 5 &&\r\n        /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)\r\n      )\r\n    ) {\r\n      setShowToast(false);\r\n      setShowLogin(true);\r\n      setTimeout(() => {\r\n        setShowLogin(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n    try {\r\n      await signServices.SignUp({\r\n        username,\r\n        password,\r\n        email,\r\n      });\r\n      setShowToast(true);\r\n      setTimeout(() => {\r\n        setShowToast(false);\r\n        navigate(\"/\");\r\n      }, 2000);\r\n    } catch (e) {\r\n      alert(\"Sign up fail\");\r\n      console.log(e);\r\n    }\r\n  };\r\n  const handlerTest = () => {\r\n    console.log(password);\r\n    console.log(username);\r\n    console.log(email);\r\n  };\r\n  return (\r\n    <>\r\n      {showToast ? (\r\n        <div className=\"flex absolute left-0 right-0 top-10  ease-in duration-300 flex-col justify-center\">\r\n          <div\r\n            className=\"bg-green-600 shadow-lg mx-auto w-96 max-w-full text-sm pointer-events-auto bg-clip-padding rounded-lg block mb-3\"\r\n            id=\"static-example\"\r\n            aria-live=\"assertive\"\r\n            aria-atomic=\"true\"\r\n            data-mdb-autohide=\"false\"\r\n          >\r\n            <div className=\"bg-green-600 flex justify-between items-center py-2 px-3 bg-clip-padding border-b border-green-500 rounded-t-lg\">\r\n              <p className=\"font-bold text-white flex items-center\">SUCCESS</p>\r\n            </div>\r\n            <div className=\"p-3 bg-green-600 rounded-b-lg break-words text-white\">\r\n              <p className=\"font-bold\">Sign up success</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : showLogin ? (\r\n        <div className=\"flex absolute left-0 right-0 top-10  ease-in duration-300 flex-col justify-center\">\r\n          <div\r\n            className=\"bg-red-600 shadow-lg mx-auto w-96 max-w-full text-sm pointer-events-auto bg-clip-padding rounded-lg block mb-3\"\r\n            id=\"static-example\"\r\n            aria-live=\"assertive\"\r\n            aria-atomic=\"true\"\r\n            data-mdb-autohide=\"false\"\r\n          >\r\n            <div className=\"bg-red-600 flex justify-between items-center py-2 px-3 bg-clip-padding border-b border-red-500 rounded-t-lg\">\r\n              <p className=\"font-bold text-white flex items-center\">Error</p>\r\n            </div>\r\n            <div className=\"p-3 bg-red-600 rounded-b-lg break-words text-white\">\r\n              <p className=\"font-bold\">\r\n                Username, password must be more than 6 characters and Email must\r\n                be in the correct format\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <section className=\"h-screen \">\r\n        <div className=\"px-6 h-full text-gray-800\">\r\n          <div className=\"flex xl:justify-center lg:justify-between justify-center items-center flex-wrap h-full g-6\">\r\n            <div className=\"grow-0 shrink-1 md:shrink-0 basis-auto xl:w-6/12 lg:w-6/12 md:w-9/12 mb-12 md:mb-0\">\r\n              <img\r\n                src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp\"\r\n                className=\"w-full\"\r\n                alt=\"Sample image\"\r\n              />\r\n            </div>\r\n            <div className=\"xl:ml-20 xl:w-5/12 lg:w-5/12 md:w-8/12 mb-12 md:mb-0\">\r\n              <form>\r\n                <div className=\"mb-6\">\r\n                  <h1 className=\"text-4xl font-bold text-center\">Sign Up</h1>\r\n                </div>\r\n\r\n                <div className=\"mb-6\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    placeholder=\"User name\"\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-6\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                    id=\"exampleFormControlInput2\"\r\n                    placeholder=\"Email address\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                    id=\"exampleFormControlInput3\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"text-center lg:text-left\">\r\n                  <button\r\n                    onClick={() => handlerSingUp()}\r\n                    type=\"button\"\r\n                    className=\"inline-block w-full px-7 py-3 bg-blue-600 text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\"\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                  <p className=\"text-sm font-semibold text-center mt-4 pt-1 mb-0\">\r\n                    Already have an account\r\n                    <Link to=\"/\">\r\n                      <button className=\"underline ml-1\">Login</button>\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\test\\src\\pages\\Result.js",["109","110","111","112","113","114"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useSearchParams, Link } from \"react-router-dom\";\r\nimport { examsServices } from \"../services/examsServices\";\r\nfunction Result() {\r\n  let navigate = useNavigate();\r\n  const [searchParam] = useSearchParams();\r\n  const [id, setId] = useState(() => {\r\n    return searchParam?.get(\"id\");\r\n  });\r\n  const [idUser, setIdUser] = useState(() => {\r\n    return searchParam?.get(\"idUser\");\r\n  });\r\n  const [userName, setUserName] = useState(() => {\r\n    return localStorage.getItem(\"userName\");\r\n  });\r\n  const [data, setData] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n\r\n  if (!localStorage.getItem(\"token\")) {\r\n    alert(\"You must be logged in to access this page\");\r\n    navigate(\"/\");\r\n  }\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const reps = await examsServices.getResult(idUser, id);\r\n        setData(reps.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n  useEffect(() => {\r\n    let correct = 0;\r\n    let wrong = 0;\r\n    let sumPoint = data.reduce((acc, cur) => {\r\n      acc += cur.mark;\r\n      return acc;\r\n    }, 0);\r\n    for (let i in data) {\r\n      if (data[i].mark == 0) {\r\n        wrong += 1;\r\n      } else {\r\n        correct += 1;\r\n      }\r\n    }\r\n    setResult({\r\n      correct,\r\n      wrong,\r\n      sumPoint,\r\n    });\r\n  }, [result]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"app\"\r\n        className=\"flex w-full h-screen justify-center items-center\"\r\n      >\r\n        <div className=\"w-full max-w-xl p-3\">\r\n          <h1 className=\"font-bold text-5xl w-full text-center text-indigo-700\">\r\n            Result Hackathon Quiz\r\n          </h1>\r\n          <div className=\"mt-4\">\r\n            <p>User: {userName}</p>\r\n          </div>\r\n          <div className=\"mt-1 flex flex-col justify-center items-center\">\r\n                <h2 className=\"text-bold text-3xl text-center\">\r\n                  Point: {result?.sumPoint}\r\n                </h2>\r\n                <div className=\"flex justify-center items-center space-x-4 mt-6\">\r\n                  <p>\r\n                    Correct Answers: {result?.correct}\r\n                    <span className=\"text-2xl text-green-700 font-bold\"></span>\r\n                  </p>\r\n                  <p>\r\n                    Wrong Answers:{result?.wrong}\r\n                    <span className=\"text-2xl text-red-700 font-bold\"></span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"mt-6 flex justify-end w-full\">\r\n                  <Link to={`/choose-quiz?userName=${userName}`}>\r\n                    <button className=\"float-right bg-indigo-600 text-white text-sm font-bold tracking-wide rounded-full px-5 py-2\">\r\n                      Go to home page\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Result;\r\n","D:\\test\\src\\pages\\ChooseQuiz.js",["115","116","117","118","119","120"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { examsServices } from \"../services/examsServices\";\r\n\r\nexport default function ChooseQuiz() {\r\n  const [exams, setExams] = useState([]);\r\n  const [show, setShow] = useState(true);\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [searchParam] = useSearchParams();\r\n  const [id, setId] = useState(() => {\r\n    return searchParam.get(\"id\");\r\n  });\r\n  const [userName, setUserName] = useState(() => {\r\n    return searchParam.get(\"userName\");\r\n  });\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      alert(\"You must be logged in to access this page\");\r\n      navigate(\"/\");\r\n    }\r\n    setShowToast(true);\r\n    let time = setTimeout(() => {\r\n      setShowToast(false);\r\n    }, 3000);\r\n    return () => {\r\n      clearTimeout(time);\r\n      setShow(false);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const reps = await examsServices.getExams();\r\n        setExams(reps.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n  const handlerLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"idUser\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {show ? (\r\n        <div className=\"h-screen w-full flex items-center justify-center\">\r\n          <svg\r\n            role=\"status\"\r\n            className=\"inline w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600\"\r\n            viewBox=\"0 0 100 101\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n            <path\r\n              d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n              fill=\"currentFill\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <section className=\"fixed mx-auto\">\r\n            <nav className=\"flex justify-between bg-violet-900 text-white w-screen\">\r\n              <div className=\"px-5 sm:p-5  xl:px-12 py-6 flex w-full items-center justify-between\">\r\n                <a className=\"text-3xl font-bold font-heading\" href=\"#\">\r\n                  <h1>Hackathon</h1>\r\n                </a>\r\n                <div className=\"xl:flex  items-center space-x-5\">\r\n                  <ul className=\"flex sm:ml-2 items-center justify-center \">\r\n                    <li>\r\n                      <Link to={`/ranking`}>\r\n                        <i className=\"fa-solid fa-ranking-star sm:inline md:inline md:text-xl lg:text-2xl \"></i>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"ml-4\">\r\n                      <Link to={`/dashboard?UserName=${userName}`}>\r\n                        <i className=\"fa-solid fa-list sm:inline md:inline md:text-xl lg:text-2xl\"></i>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"ml-4\">\r\n                      <i onClick={() => handlerLogout()} className=\"fa-solid fa-arrow-right-from-bracket md:text-xl sm:inline md:inline lg:text-2xl\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </section>\r\n          <div\r\n            id=\"app\"\r\n            className=\"flex w-full  h-screen justify-center items-center\"\r\n          >\r\n            <div className=\"w-full max-w-xl p-3\">\r\n              <h1 className=\"font-bold sm:mt-20  text-5xl text-center text-indigo-700\">\r\n                Hackathon Quiz\r\n              </h1>\r\n              <div>\r\n                <p className=\"mt-2\">User: {searchParam.get(\"userName\")}</p>\r\n              </div>\r\n              <div className=\"mt-6 flex flex-col justify-center items-center\">\r\n                {exams?.map((exam, index) => (\r\n                  <div key={index} className=\"w-full my-2\">\r\n                    <Link to={`/quiz?id=${exam?.id}`}>\r\n                      <button className=\"float-right w-full hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300 bg-indigo-600 text-white text-sm font-bold tracking-wide rounded-full px-5 py-2\">\r\n                        {exam?.exam_name}\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\test\\src\\services\\loginServices.js",[],[],"D:\\test\\src\\services\\examsServices.js",[],[],"D:\\test\\src\\services\\signServices.js",[],[],"D:\\test\\src\\services\\Axios.js",[],[],"D:\\test\\src\\pages\\DashBoard.js",["121","122","123","124","125","126","127","128","129"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { examsServices } from \"../services/examsServices\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nfunction DashBoard() {\r\n  const [data, setData] = useState([]);\r\n  const [searchParam] = useSearchParams();\r\n  const [result, setResult] = useState([]);\r\n  const [resultAnswer, setResultAnswer] = useState([]);\r\n  const [idUser, setIdUser] = useState(() => {\r\n    return localStorage.getItem(\"idUser\");\r\n  });\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const reps = await examsServices.getAllResult(idUser);\r\n        setData(reps.data);\r\n        console.log(reps.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n  useEffect(() => {\r\n    let wrong = 0;\r\n    let correct = 0;\r\n    for(let i in data.resultDTOS){\r\n    if(data.resultDTOS[i].mark ==0){\r\n        wrong += 1\r\n    } else {\r\n        correct +=1\r\n    }\r\n    setResultAnswer({\r\n        correct,\r\n        wrong\r\n    })\r\n}\r\n  },[])\r\n  useEffect(() => {\r\n  let cloneData = [...data]\r\n    cloneData.map(x => {\r\n      let correct = 0\r\n      let wrong = 0\r\n      for(let i in x.resultDTOS) {\r\n          if(x.resultDTOS[i].mark == 0) {\r\n              x.wrong = wrong += 1\r\n          } else {\r\n              x.correct = correct += 1\r\n          }\r\n      }\r\n  })\r\n  setResult(cloneData)\r\n  },[result])\r\n  return (\r\n    <>\r\n      <div className=\"bg-white p-8 rounded-md w-full\">\r\n        <div className=\" flex items-center justify-between pb-6\">\r\n          <div>\r\n            <h2 className=\"text-gray-600 font-semibold\">Dashboard</h2>\r\n            <span className=\"text-xs\">All exams</span>\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"lg:ml-40 ml-10 space-x-8\">\r\n              <Link\r\n                to={`/choose-quiz?userName=${searchParam.get(\r\n                  \"UserName\"\r\n                )}`}\r\n              >\r\n                <button className=\"bg-red-600 px-4 py-2 rounded-md text-white font-semibold tracking-wide cursor-pointer\">\r\n                  Go to Home page\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n            <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n              <table className=\"min-w-full leading-normal\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                      Name Exam\r\n                    </th>\r\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                      Correct answer\r\n                    </th>\r\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                      Wrong answer\r\n                    </th>\r\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                      Point\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {result?.map((item, index) => (\r\n                    <>\r\n                      <tr key={index}>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                          <div className=\"flex items-center\">\r\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                              {item.exam_name}\r\n                            </p>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                            {item.correct || 0}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                            {item.wrong || 0}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                            {item?.resultDTOS?.reduce((acc, int) => acc += int.mark,0)}\r\n                          </p>\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default DashBoard;\r\n","D:\\test\\src\\pages\\NotFound.js",[],[],"D:\\test\\src\\pages\\Ranking.js",["130","131","132","133","134"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { examsServices } from \"../services/examsServices\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nfunction Ranking() {\r\n  const [data, setData] = useState([]);\r\n  const [datas, setDatas] = useState([]);\r\n  const [show, setShow] = useState(true);\r\n  const [searchParam] = useSearchParams();\r\n  const [time, setTime] = useState(3);\r\n  const [idUser, setIdUser] = useState(() => {\r\n    return localStorage.getItem(\"idUser\");\r\n  });\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        console.log(1);\r\n        const reps = await examsServices.getRanking();\r\n        setData(reps.data);\r\n        console.log(reps.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n  useEffect(() => {\r\n    let cloneData = [...data];\r\n    cloneData.map((items) =>\r\n      items.examDTO.reduce((acc, item) => {\r\n        return (items.total = acc + item.totalScore);\r\n      }, 0)\r\n    );\r\n    let a = setTimeout(() => {\r\n      setTime(time - 1);\r\n      setShow(false)\r\n    }, 1000);\r\n    if (time === 0) {\r\n      clearTimeout(a);\r\n    }\r\n    setDatas(cloneData);\r\n    return () => {\r\n      clearTimeout(a);\r\n    };\r\n  }, [time]);\r\n  return (\r\n    <>\r\n      {show ? (\r\n        <div class=\"h-screen w-full flex items-center justify-center\">\r\n          <svg\r\n            role=\"status\"\r\n            class=\"inline w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600\"\r\n            viewBox=\"0 0 100 101\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n            <path\r\n              d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n              fill=\"currentFill\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white p-8 rounded-md w-full\">\r\n          <div className=\" flex items-center justify-between pb-6\">\r\n            <div>\r\n              <h2 className=\"text-gray-600 font-semibold\">Ranking</h2>\r\n              <span className=\"text-xs\">Top user</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"lg:ml-40 ml-10 space-x-8\">\r\n                <Link\r\n                  to={`/choose-quiz?userName=${localStorage.getItem(\r\n                    \"userName\"\r\n                  )}&id=${localStorage.getItem(\"idUser\")}`}\r\n                >\r\n                  <button className=\"bg-red-600 px-4 py-2 rounded-md text-white font-semibold tracking-wide cursor-pointer\">\r\n                    Go to Home page\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n              <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                <table className=\"min-w-full leading-normal\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                        No.\r\n                      </th>\r\n                      <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                        Name user\r\n                      </th>\r\n                      <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                        Email user\r\n                      </th>\r\n                      <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                        Total number of exams\r\n                      </th>\r\n                      <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                        Total point\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {datas\r\n                      ?.sort((a, b) => b.total - a.total)\r\n                      ?.map((item, index) => (\r\n                        <>\r\n                          <tr key={index}>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                              <div className=\"flex items-center\">\r\n                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                  {index + 1}\r\n                                </p>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                              <div className=\"flex items-center\">\r\n                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                  {item?.username}\r\n                                </p>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                              <div className=\"flex items-center\">\r\n                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                  {item?.email}\r\n                                </p>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                              <p className=\"text-gray-900 whitespace-no-wrap text-center\">\r\n                                {item?.examDTO?.length}\r\n                              </p>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                              <p className=\"text-gray-900 text-center whitespace-no-wrap\">\r\n                                {item?.examDTO?.reduce((acc, cur) => {\r\n                                  return acc + cur.totalScore;\r\n                                }, 0)}\r\n                              </p>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Ranking;\r\n",{"ruleId":"135","severity":1,"message":"136","line":2,"column":40,"nodeType":"137","messageId":"138","endLine":2,"endColumn":44},{"ruleId":"135","severity":1,"message":"139","line":11,"column":18,"nodeType":"137","messageId":"138","endLine":11,"endColumn":27},{"ruleId":"135","severity":1,"message":"140","line":25,"column":10,"nodeType":"137","messageId":"138","endLine":25,"endColumn":15},{"ruleId":"135","severity":1,"message":"141","line":27,"column":10,"nodeType":"137","messageId":"138","endLine":27,"endColumn":20},{"ruleId":"135","severity":1,"message":"142","line":30,"column":20,"nodeType":"137","messageId":"138","endLine":30,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":58,"column":6,"nodeType":"145","endLine":58,"endColumn":14,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":69,"column":6,"nodeType":"145","endLine":69,"endColumn":12,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":83,"column":6,"nodeType":"145","endLine":83,"endColumn":19,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":103,"column":6,"nodeType":"145","endLine":103,"endColumn":22,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"153","line":108,"column":6,"nodeType":"145","endLine":108,"endColumn":18,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"155","line":114,"column":5,"nodeType":"145","endLine":114,"endColumn":13,"suggestions":"156"},{"ruleId":"143","severity":1,"message":"157","line":130,"column":6,"nodeType":"145","endLine":130,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":216,"column":53,"nodeType":"161","endLine":216,"endColumn":185},{"ruleId":"162","severity":1,"message":"163","line":222,"column":62,"nodeType":"164","messageId":"165","endLine":222,"endColumn":64},{"ruleId":"162","severity":1,"message":"163","line":230,"column":61,"nodeType":"164","messageId":"165","endLine":230,"endColumn":63},{"ruleId":"162","severity":1,"message":"163","line":235,"column":62,"nodeType":"164","messageId":"165","endLine":235,"endColumn":64},{"ruleId":"135","severity":1,"message":"166","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"168","line":102,"column":19,"nodeType":"161","endLine":106,"endColumn":21},{"ruleId":"135","severity":1,"message":"166","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":19,"column":16,"nodeType":"171","messageId":"172","endLine":19,"endColumn":17,"suggestions":"173"},{"ruleId":"169","severity":1,"message":"170","line":19,"column":32,"nodeType":"171","messageId":"172","endLine":19,"endColumn":33,"suggestions":"174"},{"ruleId":"135","severity":1,"message":"175","line":45,"column":9,"nodeType":"137","messageId":"138","endLine":45,"endColumn":20},{"ruleId":"167","severity":1,"message":"168","line":96,"column":15,"nodeType":"161","endLine":100,"endColumn":17},{"ruleId":"135","severity":1,"message":"176","line":7,"column":14,"nodeType":"137","messageId":"138","endLine":7,"endColumn":19},{"ruleId":"135","severity":1,"message":"139","line":10,"column":18,"nodeType":"137","messageId":"138","endLine":10,"endColumn":27},{"ruleId":"135","severity":1,"message":"142","line":13,"column":20,"nodeType":"137","messageId":"138","endLine":13,"endColumn":31},{"ruleId":"143","severity":1,"message":"177","line":32,"column":6,"nodeType":"145","endLine":32,"endColumn":8,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"163","line":41,"column":24,"nodeType":"164","messageId":"165","endLine":41,"endColumn":26},{"ruleId":"143","severity":1,"message":"153","line":52,"column":6,"nodeType":"145","endLine":52,"endColumn":14,"suggestions":"179"},{"ruleId":"135","severity":1,"message":"180","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"181","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":12},{"ruleId":"135","severity":1,"message":"176","line":10,"column":14,"nodeType":"137","messageId":"138","endLine":10,"endColumn":19},{"ruleId":"135","severity":1,"message":"142","line":13,"column":20,"nodeType":"137","messageId":"138","endLine":13,"endColumn":31},{"ruleId":"143","severity":1,"message":"182","line":30,"column":6,"nodeType":"145","endLine":30,"endColumn":8,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":75,"column":17,"nodeType":"161","endLine":75,"endColumn":73},{"ruleId":"135","severity":1,"message":"186","line":3,"column":16,"nodeType":"137","messageId":"138","endLine":3,"endColumn":27},{"ruleId":"135","severity":1,"message":"187","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":22},{"ruleId":"135","severity":1,"message":"139","line":10,"column":18,"nodeType":"137","messageId":"138","endLine":10,"endColumn":27},{"ruleId":"143","severity":1,"message":"188","line":23,"column":6,"nodeType":"145","endLine":23,"endColumn":8,"suggestions":"189"},{"ruleId":"162","severity":1,"message":"163","line":28,"column":32,"nodeType":"164","messageId":"165","endLine":28,"endColumn":34},{"ruleId":"143","severity":1,"message":"190","line":38,"column":5,"nodeType":"145","endLine":38,"endColumn":7,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":41,"column":21,"nodeType":"194","messageId":"195","endLine":41,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":45,"column":35,"nodeType":"164","messageId":"165","endLine":45,"endColumn":37},{"ruleId":"143","severity":1,"message":"153","line":53,"column":5,"nodeType":"145","endLine":53,"endColumn":13,"suggestions":"196"},{"ruleId":"135","severity":1,"message":"186","line":3,"column":16,"nodeType":"137","messageId":"138","endLine":3,"endColumn":27},{"ruleId":"135","severity":1,"message":"197","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":21},{"ruleId":"135","severity":1,"message":"198","line":11,"column":10,"nodeType":"137","messageId":"138","endLine":11,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":11,"column":18,"nodeType":"137","messageId":"138","endLine":11,"endColumn":27},{"ruleId":"143","severity":1,"message":"153","line":44,"column":6,"nodeType":"145","endLine":44,"endColumn":12,"suggestions":"199"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setIdUser' is assigned a value but never used.","'check' is assigned a value but never used.","'idQuestion' is assigned a value but never used.","'setUserName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'minutes'. Either include it or remove the dependency array. You can also do a functional update 'setMinutes(m => ...)' if you only need 'minutes' in the 'setMinutes' call.","ArrayExpression",["200"],"React Hook useEffect has missing dependencies: 'id' and 'searchParam'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'listAnswer' and 'listsAnswer'. Either include them or remove the dependency array. You can also do a functional update 'setListAnswers(l => ...)' if you only need 'listsAnswer' in the 'setListAnswers' call.",["202"],"React Hook useEffect has missing dependencies: 'data', 'questionId', and 'questions'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["203"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'handlerSubmit' and 'minutes'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.",["206"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["207","208"],["209","210"],"'handlerTest' is assigned a value but never used.","'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'idUser'. Either include them or remove the dependency array.",["211"],["212"],"'showToast' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["213"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useNavigate' is defined but never used.","'resultAnswer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idUser'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'data.resultDTOS'. Either include it or remove the dependency array.",["215"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["216"],"'searchParam' is assigned a value but never used.","'idUser' is assigned a value but never used.",["217"],{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"messageId":"232","fix":"233","desc":"234"},{"messageId":"235","fix":"236","desc":"237"},{"messageId":"232","fix":"238","desc":"234"},{"messageId":"235","fix":"239","desc":"237"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"242","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [minutes, second]",{"range":"253","text":"254"},"Update the dependencies array to be: [id, searchParam, show]",{"range":"255","text":"256"},"Update the dependencies array to be: [addQuestion, listAnswer, listsAnswer]",{"range":"257","text":"258"},"Update the dependencies array to be: [data, filterSelected, questionId, questions]",{"range":"259","text":"260"},"Update the dependencies array to be: [data, dataFilter]",{"range":"261","text":"262"},"Update the dependencies array to be: [handlerSubmit, minutes, second]",{"range":"263","text":"264"},"Update the dependencies array to be: [questions]",{"range":"265","text":"266"},"removeEscape",{"range":"267","text":"268"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"269","text":"270"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"271","text":"268"},{"range":"272","text":"270"},"Update the dependencies array to be: [id, idUser]",{"range":"273","text":"274"},"Update the dependencies array to be: [data, result]",{"range":"275","text":"276"},"Update the dependencies array to be: [navigate]",{"range":"277","text":"278"},"Update the dependencies array to be: [idUser]",{"range":"279","text":"280"},"Update the dependencies array to be: [data.resultDTOS]",{"range":"281","text":"282"},{"range":"283","text":"276"},"Update the dependencies array to be: [data, time]",{"range":"284","text":"285"},[1950,1958],"[minutes, second]",[2235,2241],"[id, searchParam, show]",[2602,2615],"[addQuestion, listAnswer, listsAnswer]",[3077,3093],"[data, filterSelected, questionId, questions]",[3286,3298],"[data, dataFilter]",[3412,3420],"[handlerSubmit, minutes, second]",[3933,3935],"[questions]",[616,617],"",[616,616],"\\",[632,633],[632,632],[996,998],"[id, idUser]",[1381,1389],"[data, result]",[964,966],"[navigate]",[748,750],"[idUser]",[1024,1026],"[data.resultDTOS]",[1380,1388],[1229,1235],"[data, time]"]